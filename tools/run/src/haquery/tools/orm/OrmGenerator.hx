package haquery.tools.orm;

import haquery.server.FileSystem;
import haquery.server.db.HaqDb;
import haquery.tools.Log;
import haquery.tools.orm.OrmTools;

using haquery.StringTools;

class OrmGenerator
{
    public static function run(log:Log, basePath:String)
	{
		new OrmGenerator(log, basePath);
	}
	
	function new(log:Log, basePath:String)
    {
		basePath = basePath.replace('\\', '/').rtrim('/') + '/';
		
        var modelFolder = basePath + 'models';
		if (!FileSystem.exists(modelFolder))
		{
			FileSystem.createDirectory(modelFolder);
		}
        if (!FileSystem.exists(modelFolder + '/autogenerated'))
		{
			FileSystem.createDirectory(modelFolder + '/autogenerated');
		}
        
        var managerFolder = basePath + 'managers';
		if (!FileSystem.exists(managerFolder))
		{
			FileSystem.createDirectory(managerFolder);
		}
        if (!FileSystem.exists(managerFolder + '/autogenerated'))
		{
			FileSystem.createDirectory(managerFolder + '/autogenerated');
		}
        
        var tables = HaqDb.connection.getTables();
        for (table in tables)
        {
			var className = getClassName(table);
			OrmModelGenerator.make(log, table, basePath, 'models.' + className, 'models.autogenerated.' + className, 'managers.' + className + 'Manager');
			OrmManagerGenerator.make(log, table, basePath, 'models.' + className, 'managers.' + className + 'Manager', 'managers.autogenerated.' + className + 'Manager');
        }
    }
	
	function getClassName(table:String) : String
    {
		return Lambda.map(table.toLowerCase().split('_'), function(w) { return OrmTools.capitalize(w); } ).join('');
    }
}
