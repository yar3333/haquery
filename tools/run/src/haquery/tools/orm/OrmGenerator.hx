package haquery.tools.orm;

import haquery.server.FileSystem;
import haquery.server.db.HaqDb;
import haquery.tools.FlashDevelopProject;
import haquery.tools.Log;
import haquery.tools.orm.OrmTools;

using haquery.StringTools;

class OrmGenerator
{
    public static function run(db:HaqDb, log:Log, project:FlashDevelopProject)
	{
		new OrmGenerator(db, log, project);
	}
	
	function new(db:HaqDb, log:Log, project:FlashDevelopProject)
    {
		var basePath = project.srcPath.replace('\\', '/').rtrim('/') + '/';
        
        for (table in db.connection.getTables())
        {
			var className = getClassName(table);
			OrmModelGenerator.make(db, log, table, basePath, 'models.' + className, 'models.autogenerated.' + className, 'managers.' + className + 'Manager', project);
			OrmManagerGenerator.make(db, log, table, basePath, 'models.' + className, 'managers.' + className + 'Manager', 'managers.autogenerated.' + className + 'Manager', project);
        }
    }
	
	function getClassName(table:String) : String
    {
		var s = "";
		
		var packs = table.toLowerCase().split("__");
		while (packs.length > 1)
		{
			var pack = packs.shift();
			var words = pack.split("_");
			s += words.shift();
			s += Lambda.map(words, function(w) return OrmTools.capitalize(w)).join('');
			s += ".";
		}
		
		s += Lambda.map(packs[0].split("_"), function(w) return OrmTools.capitalize(w)).join('');
		
		return s;
    }
}
